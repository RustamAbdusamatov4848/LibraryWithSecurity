services:
  db:
    image: 'postgres:latest'
    restart: unless-stopped
    container_name: lib-db
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} --quiet" ]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    networks:
      - app-network

  app:
    build:
      dockerfile: Dockerfile
      context: .
    restart: always
    container_name: lib-app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      client:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8081:8080"
      - "8443:8443"
    networks:
      - app-network

  redis:
    image: 'redis:latest'
    restart: unless-stopped
    container_name: lib-redis
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - "6379:6379"
    networks:
      - app-network

  client:
    image: 'client:latest'
    container_name: top-pdf-converter-service
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${CLIENT_POSTGRES_USER}
      POSTGRES_PASSWORD: ${CLIENT_POSTGRES_PASSWORD}
      POSTGRES_DB: ${CLIENT_POSTGRES_DB}
      DB_URL: ${CLIENT_DB_URL}
    ports:
      - "8082:8081"
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: minio
    env_file:
      - .env
    volumes:
      - ./data:/data
    ports:
      - 9000:9000
      - 9001:9001
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9001/minio/health/live" ]
      interval: 1s
      timeout: 5s
      retries: 10
    command: server /data --console-address :9001
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
